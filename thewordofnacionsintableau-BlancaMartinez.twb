<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20224.23.0209.1653                               -->
<workbook original-version='18.1' source-build='2022.4.1 (20224.23.0209.1653)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='GDP+ (The Wealth of nations)' inline='true' name='federated.1qmrvgy1davq1f1h6xomc1dami74' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='The Wealth of nations' name='excel-direct.1mfr8er11ad2rl15z4p9u16tsdat'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/blank/OneDrive/Desktop/The Wealth of nations.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1mfr8er11ad2rl15z4p9u16tsdat' name='GDP' table='[GDP$]' type='table'>
          <columns gridOrigin='A1:D229:no:A1:D229:0' header='yes' outcome='2'>
            <column datatype='integer' name='Rank' ordinal='0' />
            <column datatype='string' name='Country' ordinal='1' />
            <column datatype='real' name='GDP - per capita (PPP)' ordinal='2' />
            <column datatype='integer' name='Year of Information' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='excel-direct.1mfr8er11ad2rl15z4p9u16tsdat' name='GDP' table='[GDP$]' type='table'>
            <columns gridOrigin='A1:D229:no:A1:D229:0' header='yes' outcome='2'>
              <column datatype='integer' name='Rank' ordinal='0' />
              <column datatype='string' name='Country' ordinal='1' />
              <column datatype='real' name='GDP - per capita (PPP)' ordinal='2' />
              <column datatype='integer' name='Year of Information' ordinal='3' />
            </columns>
          </relation>
          <relation connection='excel-direct.1mfr8er11ad2rl15z4p9u16tsdat' name='Life Expectancy' table='[&apos;Life Expectancy$&apos;]' type='table'>
            <columns gridOrigin='A1:D197:no:A1:D197:0' header='yes' outcome='6'>
              <column datatype='integer' name='Rank' ordinal='0' />
              <column datatype='string' name='Country' ordinal='1' />
              <column datatype='real' name='Life expectancy at birth' ordinal='2' />
              <column datatype='integer' name='Date of Information' ordinal='3' />
            </columns>
          </relation>
          <relation connection='excel-direct.1mfr8er11ad2rl15z4p9u16tsdat' name='Smartphones' table='[Smartphones$]' type='table'>
            <columns gridOrigin='A1:D75:no:A1:D75:0' header='yes' outcome='6'>
              <column datatype='integer' name='Rank' ordinal='0' />
              <column datatype='string' name='Country' ordinal='1' />
              <column datatype='integer' name='Smartphone Users' ordinal='2' />
              <column datatype='integer' name='Date of Information' ordinal='3' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[Country (Life Expectancy)]' value='[Life Expectancy].[Country]' />
          <map key='[Country (Smartphones)]' value='[Smartphones].[Country]' />
          <map key='[Country]' value='[GDP].[Country]' />
          <map key='[Date of Information (Smartphones)]' value='[Smartphones].[Date of Information]' />
          <map key='[Date of Information]' value='[Life Expectancy].[Date of Information]' />
          <map key='[GDP - per capita (PPP)]' value='[GDP].[GDP - per capita (PPP)]' />
          <map key='[Life expectancy at birth]' value='[Life Expectancy].[Life expectancy at birth]' />
          <map key='[Rank (Life Expectancy)]' value='[Life Expectancy].[Rank]' />
          <map key='[Rank (Smartphones)]' value='[Smartphones].[Rank]' />
          <map key='[Rank]' value='[GDP].[Rank]' />
          <map key='[Smartphone Users]' value='[Smartphones].[Smartphone Users]' />
          <map key='[Year of Information]' value='[GDP].[Year of Information]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[GDP]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D229:no:A1:D229:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Life Expectancy]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D197:no:A1:D197:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Smartphones]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D75:no:A1:D75:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Rank</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Rank]</local-name>
            <parent-name>[GDP]</parent-name>
            <remote-alias>Rank</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[GDP_94069DFFB9C444CCB112360E79B716FD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[GDP]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[GDP_94069DFFB9C444CCB112360E79B716FD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GDP - per capita (PPP)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[GDP - per capita (PPP)]</local-name>
            <parent-name>[GDP]</parent-name>
            <remote-alias>GDP - per capita (PPP)</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[GDP_94069DFFB9C444CCB112360E79B716FD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year of Information</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year of Information]</local-name>
            <parent-name>[GDP]</parent-name>
            <remote-alias>Year of Information</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[GDP_94069DFFB9C444CCB112360E79B716FD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Rank</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Rank (Life Expectancy)]</local-name>
            <parent-name>[Life Expectancy]</parent-name>
            <remote-alias>Rank</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Life Expectancy_FB65D40B23EE48F9873FC53EF4F68E1C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country (Life Expectancy)]</local-name>
            <parent-name>[Life Expectancy]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Life Expectancy_FB65D40B23EE48F9873FC53EF4F68E1C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Life expectancy at birth</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Life expectancy at birth]</local-name>
            <parent-name>[Life Expectancy]</parent-name>
            <remote-alias>Life expectancy at birth</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Life Expectancy_FB65D40B23EE48F9873FC53EF4F68E1C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date of Information</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Date of Information]</local-name>
            <parent-name>[Life Expectancy]</parent-name>
            <remote-alias>Date of Information</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Life Expectancy_FB65D40B23EE48F9873FC53EF4F68E1C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Rank</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Rank (Smartphones)]</local-name>
            <parent-name>[Smartphones]</parent-name>
            <remote-alias>Rank</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Smartphones_749FCAD5F0344B13A6256CF54F61923F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country (Smartphones)]</local-name>
            <parent-name>[Smartphones]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Smartphones_749FCAD5F0344B13A6256CF54F61923F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Smartphone Users</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Smartphone Users]</local-name>
            <parent-name>[Smartphones]</parent-name>
            <remote-alias>Smartphone Users</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Smartphones_749FCAD5F0344B13A6256CF54F61923F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date of Information</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Date of Information (Smartphones)]</local-name>
            <parent-name>[Smartphones]</parent-name>
            <remote-alias>Date of Information</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Smartphones_749FCAD5F0344B13A6256CF54F61923F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[Country (Life Expectancy)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Country (Smartphones)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='integer' name='[Date of Information (Smartphones)]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Date of Information]' role='measure' type='quantitative' />
      <column datatype='real' name='[GDP - per capita (PPP)]' role='measure' type='quantitative' />
      <column datatype='real' name='[Life expectancy at birth]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Rank (Life Expectancy)]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Rank (Smartphones)]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Rank]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Smartphone Users]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Year of Information]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='GDP' datatype='table' name='[__tableau_internal_object_id__].[GDP_94069DFFB9C444CCB112360E79B716FD]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Life Expectancy' datatype='table' name='[__tableau_internal_object_id__].[Life Expectancy_FB65D40B23EE48F9873FC53EF4F68E1C]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Smartphones' datatype='table' name='[__tableau_internal_object_id__].[Smartphones_749FCAD5F0344B13A6256CF54F61923F]' role='measure' type='quantitative' />
      <column-instance column='[__tableau_internal_object_id__].[GDP_94069DFFB9C444CCB112360E79B716FD]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:GDP_94069DFFB9C444CCB112360E79B716FD:qk]' pivot='key' type='quantitative' />
      <column-instance column='[__tableau_internal_object_id__].[Life Expectancy_FB65D40B23EE48F9873FC53EF4F68E1C]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:Life Expectancy_FB65D40B23EE48F9873FC53EF4F68E1C:qk]' pivot='key' type='quantitative' />
      <column-instance column='[__tableau_internal_object_id__].[Smartphones_749FCAD5F0344B13A6256CF54F61923F]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:Smartphones_749FCAD5F0344B13A6256CF54F61923F:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Country (Life Expectancy)]' derivation='None' name='[none:Country (Life Expectancy):nk]' pivot='key' type='nominal' />
      <column-instance column='[Country (Smartphones)]' derivation='None' name='[none:Country (Smartphones):nk]' pivot='key' type='nominal' />
      <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
      <column-instance column='[Date of Information (Smartphones)]' derivation='Sum' name='[sum:Date of Information (Smartphones):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Date of Information]' derivation='Sum' name='[sum:Date of Information:qk]' pivot='key' type='quantitative' />
      <column-instance column='[GDP - per capita (PPP)]' derivation='Sum' name='[sum:GDP - per capita (PPP):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Life expectancy at birth]' derivation='Sum' name='[sum:Life expectancy at birth:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Life expectancy at birth]' derivation='Sum' name='[sum:Life expectancy at birth:vtmax:qk]' pivot='key' type='quantitative' visual-totals='Max' />
      <column-instance column='[Rank (Life Expectancy)]' derivation='Sum' name='[sum:Rank (Life Expectancy):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Rank (Smartphones)]' derivation='Sum' name='[sum:Rank (Smartphones):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Rank]' derivation='Sum' name='[sum:Rank:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Smartphone Users]' derivation='Sum' name='[sum:Smartphone Users:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Year of Information]' derivation='Sum' name='[sum:Year of Information:qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Country (Smartphones):nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>%null%</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Trinidad And Tobago&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;North Korea&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Country (Life Expectancy):nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ivory Coast&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sub-Saharan Africa&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;East Timor&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;São Tomé and Príncipe&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Latin America and the Caribbean&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Europe and Central Asia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Micronesia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;DR Congo&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Arab States&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;East Asia and the Pacific&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;South Asia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;[federated.1qmrvgy1davq1f1h6xomc1dami74].[sum:Rank (Life Expectancy):qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1qmrvgy1davq1f1h6xomc1dami74].[__tableau_internal_object_id__].[cnt:GDP_94069DFFB9C444CCB112360E79B716FD:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1qmrvgy1davq1f1h6xomc1dami74].[sum:Date of Information (Smartphones):qk]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[federated.1qmrvgy1davq1f1h6xomc1dami74].[sum:Rank (Smartphones):qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.1qmrvgy1davq1f1h6xomc1dami74].[sum:GDP - per capita (PPP):qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.1qmrvgy1davq1f1h6xomc1dami74].[__tableau_internal_object_id__].[cnt:Life Expectancy_FB65D40B23EE48F9873FC53EF4F68E1C:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.1qmrvgy1davq1f1h6xomc1dami74].[sum:Life expectancy at birth:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.1qmrvgy1davq1f1h6xomc1dami74].[sum:Life expectancy at birth:vtmax:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1qmrvgy1davq1f1h6xomc1dami74].[sum:Smartphone Users:qk]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[federated.1qmrvgy1davq1f1h6xomc1dami74].[sum:Rank:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1qmrvgy1davq1f1h6xomc1dami74].[__tableau_internal_object_id__].[cnt:Smartphones_749FCAD5F0344B13A6256CF54F61923F:qk]&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;[federated.1qmrvgy1davq1f1h6xomc1dami74].[sum:Year of Information:qk]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[federated.1qmrvgy1davq1f1h6xomc1dami74].[sum:Date of Information:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Country:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;EU&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot; Monaco&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;American Samoa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Wallis and Futuna&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sint Maarten&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tokelau&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;DR Congo&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;São Tomé and Príncipe&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Northern Mariana Islands&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Saint Martin&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;U.S. Virgin Islands&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Micronesia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Saint Pierre and Miquelon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;East Timor&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Faroe Islands&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Niue&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cook Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Saint Vincent &amp; the Grenadines&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Curaçao&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;North Korea&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ivory Coast&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Macau&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United Kingdom&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='GDP' id='GDP_94069DFFB9C444CCB112360E79B716FD'>
            <properties context=''>
              <relation connection='excel-direct.1mfr8er11ad2rl15z4p9u16tsdat' name='GDP' table='[GDP$]' type='table'>
                <columns gridOrigin='A1:D229:no:A1:D229:0' header='yes' outcome='2'>
                  <column datatype='integer' name='Rank' ordinal='0' />
                  <column datatype='string' name='Country' ordinal='1' />
                  <column datatype='real' name='GDP - per capita (PPP)' ordinal='2' />
                  <column datatype='integer' name='Year of Information' ordinal='3' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='Life Expectancy' id='Life Expectancy_FB65D40B23EE48F9873FC53EF4F68E1C'>
            <properties context=''>
              <relation connection='excel-direct.1mfr8er11ad2rl15z4p9u16tsdat' name='Life Expectancy' table='[&apos;Life Expectancy$&apos;]' type='table'>
                <columns gridOrigin='A1:D197:no:A1:D197:0' header='yes' outcome='6'>
                  <column datatype='integer' name='Rank' ordinal='0' />
                  <column datatype='string' name='Country' ordinal='1' />
                  <column datatype='real' name='Life expectancy at birth' ordinal='2' />
                  <column datatype='integer' name='Date of Information' ordinal='3' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='Smartphones' id='Smartphones_749FCAD5F0344B13A6256CF54F61923F'>
            <properties context=''>
              <relation connection='excel-direct.1mfr8er11ad2rl15z4p9u16tsdat' name='Smartphones' table='[Smartphones$]' type='table'>
                <columns gridOrigin='A1:D75:no:A1:D75:0' header='yes' outcome='6'>
                  <column datatype='integer' name='Rank' ordinal='0' />
                  <column datatype='string' name='Country' ordinal='1' />
                  <column datatype='integer' name='Smartphone Users' ordinal='2' />
                  <column datatype='integer' name='Date of Information' ordinal='3' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[Country]' />
              <expression op='[Country (Life Expectancy)]' />
            </expression>
            <first-end-point object-id='GDP_94069DFFB9C444CCB112360E79B716FD' />
            <second-end-point object-id='Life Expectancy_FB65D40B23EE48F9873FC53EF4F68E1C' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[Country]' />
              <expression op='[Country (Smartphones)]' />
            </expression>
            <first-end-point object-id='GDP_94069DFFB9C444CCB112360E79B716FD' />
            <second-end-point object-id='Smartphones_749FCAD5F0344B13A6256CF54F61923F' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='life expectancy by country'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#aa0000' fontname='Tableau Medium' fontsize='16'>life expectancy by country </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='GDP+ (The Wealth of nations)' name='federated.1qmrvgy1davq1f1h6xomc1dami74' />
          </datasources>
          <datasource-dependencies datasource='federated.1qmrvgy1davq1f1h6xomc1dami74'>
            <column datatype='string' name='[Country (Life Expectancy)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[GDP - per capita (PPP)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Life expectancy at birth]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Rank (Life Expectancy)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Rank]' role='measure' type='quantitative' />
            <column-instance column='[Country (Life Expectancy)]' derivation='None' name='[none:Country (Life Expectancy):nk]' pivot='key' type='nominal' />
            <column-instance column='[GDP - per capita (PPP)]' derivation='Sum' name='[sum:GDP - per capita (PPP):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Life expectancy at birth]' derivation='Sum' name='[sum:Life expectancy at birth:vtmax:qk]' pivot='key' type='quantitative' visual-totals='Max' />
            <column-instance column='[Rank (Life Expectancy)]' derivation='Sum' name='[sum:Rank (Life Expectancy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Rank]' derivation='Sum' name='[sum:Rank:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1qmrvgy1davq1f1h6xomc1dami74].[:Measure Names]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1qmrvgy1davq1f1h6xomc1dami74].[sum:GDP - per capita (PPP):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1qmrvgy1davq1f1h6xomc1dami74].[sum:Life expectancy at birth:vtmax:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1qmrvgy1davq1f1h6xomc1dami74].[sum:Rank (Life Expectancy):qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1qmrvgy1davq1f1h6xomc1dami74].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1qmrvgy1davq1f1h6xomc1dami74].[sum:Rank (Life Expectancy):qk]&quot;</bucket>
              <bucket>&quot;[federated.1qmrvgy1davq1f1h6xomc1dami74].[sum:Life expectancy at birth:vtmax:qk]&quot;</bucket>
              <bucket>&quot;[federated.1qmrvgy1davq1f1h6xomc1dami74].[sum:GDP - per capita (PPP):qk]&quot;</bucket>
              <bucket>&quot;[federated.1qmrvgy1davq1f1h6xomc1dami74].[sum:Rank:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1qmrvgy1davq1f1h6xomc1dami74].[none:Country (Life Expectancy):nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Country (Life Expectancy):nk]' />
              <groupfilter function='member' level='[none:Country (Life Expectancy):nk]' member='%null%' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1qmrvgy1davq1f1h6xomc1dami74].[none:Country (Life Expectancy):nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1qmrvgy1davq1f1h6xomc1dami74].[sum:Life expectancy at birth:vtmax:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1qmrvgy1davq1f1h6xomc1dami74].[none:Country (Life Expectancy):nk]</column>
            <column>[federated.1qmrvgy1davq1f1h6xomc1dami74].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.1qmrvgy1davq1f1h6xomc1dami74].[:Measure Names]' value='0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1qmrvgy1davq1f1h6xomc1dami74].[none:Country (Life Expectancy):nk]' />
              <text column='[federated.1qmrvgy1davq1f1h6xomc1dami74].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1qmrvgy1davq1f1h6xomc1dami74].[none:Country (Life Expectancy):nk]</rows>
        <cols>[federated.1qmrvgy1davq1f1h6xomc1dami74].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{F87FBEB6-D9D5-4891-B79E-90D6D881ECDD}' />
    </worksheet>
    <worksheet name='smartphones by country'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#aa0000' fontname='Tableau Medium'>smartphones by country</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='GDP+ (The Wealth of nations)' name='federated.1qmrvgy1davq1f1h6xomc1dami74' />
          </datasources>
          <datasource-dependencies datasource='federated.1qmrvgy1davq1f1h6xomc1dami74'>
            <column datatype='string' name='[Country (Smartphones)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[Date of Information (Smartphones)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Date of Information]' role='measure' type='quantitative' />
            <column datatype='real' name='[GDP - per capita (PPP)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Life expectancy at birth]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Rank (Life Expectancy)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Rank (Smartphones)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Rank]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Smartphone Users]' role='measure' type='quantitative' />
            <_.fcp.ObjectModelTableType.false...column caption='GDP' datatype='integer' name='[__tableau_internal_object_id__].[GDP_94069DFFB9C444CCB112360E79B716FD]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year of Information]' role='measure' type='quantitative' />
            <_.fcp.ObjectModelTableType.false...column caption='Life Expectancy' datatype='integer' name='[__tableau_internal_object_id__].[Life Expectancy_FB65D40B23EE48F9873FC53EF4F68E1C]' role='measure' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='GDP' datatype='table' name='[__tableau_internal_object_id__].[GDP_94069DFFB9C444CCB112360E79B716FD]' role='measure' type='quantitative' />
            <_.fcp.ObjectModelTableType.false...column caption='Smartphones' datatype='integer' name='[__tableau_internal_object_id__].[Smartphones_749FCAD5F0344B13A6256CF54F61923F]' role='measure' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='Life Expectancy' datatype='table' name='[__tableau_internal_object_id__].[Life Expectancy_FB65D40B23EE48F9873FC53EF4F68E1C]' role='measure' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='Smartphones' datatype='table' name='[__tableau_internal_object_id__].[Smartphones_749FCAD5F0344B13A6256CF54F61923F]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[GDP_94069DFFB9C444CCB112360E79B716FD]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:GDP_94069DFFB9C444CCB112360E79B716FD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[Life Expectancy_FB65D40B23EE48F9873FC53EF4F68E1C]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:Life Expectancy_FB65D40B23EE48F9873FC53EF4F68E1C:qk]' pivot='key' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[Smartphones_749FCAD5F0344B13A6256CF54F61923F]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:Smartphones_749FCAD5F0344B13A6256CF54F61923F:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country (Smartphones)]' derivation='None' name='[none:Country (Smartphones):nk]' pivot='key' type='nominal' />
            <column-instance column='[Date of Information (Smartphones)]' derivation='Sum' name='[sum:Date of Information (Smartphones):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date of Information]' derivation='Sum' name='[sum:Date of Information:qk]' pivot='key' type='quantitative' />
            <column-instance column='[GDP - per capita (PPP)]' derivation='Sum' name='[sum:GDP - per capita (PPP):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Life expectancy at birth]' derivation='Sum' name='[sum:Life expectancy at birth:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Rank (Life Expectancy)]' derivation='Sum' name='[sum:Rank (Life Expectancy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Rank (Smartphones)]' derivation='Sum' name='[sum:Rank (Smartphones):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Rank]' derivation='Sum' name='[sum:Rank:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Smartphone Users]' derivation='Sum' name='[sum:Smartphone Users:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year of Information]' derivation='Sum' name='[sum:Year of Information:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1qmrvgy1davq1f1h6xomc1dami74].[:Measure Names]'>
            <groupfilter function='level-members' level='[:Measure Names]' />
          </filter>
          <filter class='categorical' column='[federated.1qmrvgy1davq1f1h6xomc1dami74].[none:Country (Smartphones):nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Country (Smartphones):nk]' />
              <groupfilter function='member' level='[none:Country (Smartphones):nk]' member='%null%' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1qmrvgy1davq1f1h6xomc1dami74].[none:Country (Smartphones):nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;China&quot;</bucket>
              <bucket>&quot;India&quot;</bucket>
              <bucket>&quot;Indonesia&quot;</bucket>
              <bucket>&quot;United States&quot;</bucket>
              <bucket>&quot;Brazil&quot;</bucket>
              <bucket>&quot;Russia&quot;</bucket>
              <bucket>&quot;Nigeria&quot;</bucket>
              <bucket>&quot;Bangladesh&quot;</bucket>
              <bucket>&quot;Pakistan&quot;</bucket>
              <bucket>&quot;Japan&quot;</bucket>
              <bucket>&quot;Germany&quot;</bucket>
              <bucket>&quot;Philippines&quot;</bucket>
              <bucket>&quot;Mexico&quot;</bucket>
              <bucket>&quot;Iran&quot;</bucket>
              <bucket>&quot;Egypt&quot;</bucket>
              <bucket>&quot;Italy&quot;</bucket>
              <bucket>&quot;United Kingdom&quot;</bucket>
              <bucket>&quot;Vietnam&quot;</bucket>
              <bucket>&quot;Turkey&quot;</bucket>
              <bucket>&quot;France&quot;</bucket>
              <bucket>&quot;Thailand&quot;</bucket>
              <bucket>&quot;South Africa&quot;</bucket>
              <bucket>&quot;Colombia&quot;</bucket>
              <bucket>&quot;Ukraine&quot;</bucket>
              <bucket>&quot;Argentina&quot;</bucket>
              <bucket>&quot;South Korea&quot;</bucket>
              <bucket>&quot;Spain&quot;</bucket>
              <bucket>&quot;Poland&quot;</bucket>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
              <bucket>&quot;Morocco&quot;</bucket>
              <bucket>&quot;Sri Lanka&quot;</bucket>
              <bucket>&quot;Peru&quot;</bucket>
              <bucket>&quot;Nepal&quot;</bucket>
              <bucket>&quot;Algeria&quot;</bucket>
              <bucket>&quot;Venezuela&quot;</bucket>
              <bucket>&quot;Canada&quot;</bucket>
              <bucket>&quot;Malaysia&quot;</bucket>
              <bucket>&quot;Taiwan&quot;</bucket>
              <bucket>&quot;Kenya&quot;</bucket>
              <bucket>&quot;Romania&quot;</bucket>
              <bucket>&quot;Chile&quot;</bucket>
              <bucket>&quot;Australia&quot;</bucket>
              <bucket>&quot;Netherlands&quot;</bucket>
              <bucket>&quot;Hong Kong&quot;</bucket>
              <bucket>&quot;Ethiopia&quot;</bucket>
              <bucket>&quot;Guatemala&quot;</bucket>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
              <bucket>&quot;Ecuador&quot;</bucket>
              <bucket>&quot;Sweden&quot;</bucket>
              <bucket>&quot;Zimbabwe&quot;</bucket>
              <bucket>&quot;Portugal&quot;</bucket>
              <bucket>&quot;Belgium&quot;</bucket>
              <bucket>&quot;Hungary&quot;</bucket>
              <bucket>&quot;Bulgaria&quot;</bucket>
              <bucket>&quot;Israel&quot;</bucket>
              <bucket>&quot;Finland&quot;</bucket>
              <bucket>&quot;Singapore&quot;</bucket>
              <bucket>&quot;Denmark&quot;</bucket>
              <bucket>&quot;Azerbaijan&quot;</bucket>
              <bucket>&quot;Panama&quot;</bucket>
              <bucket>&quot;Jordan&quot;</bucket>
              <bucket>&quot;Ireland&quot;</bucket>
              <bucket>&quot;Lithuania&quot;</bucket>
              <bucket>&quot;New Zealand&quot;</bucket>
              <bucket>%null%</bucket>
              <bucket>&quot;Mongolia&quot;</bucket>
              <bucket>&quot;North Korea&quot;</bucket>
              <bucket>&quot;Lebanon&quot;</bucket>
              <bucket>&quot;Latvia&quot;</bucket>
              <bucket>&quot;Trinidad And Tobago&quot;</bucket>
              <bucket>&quot;Estonia&quot;</bucket>
              <bucket>&quot;Cuba&quot;</bucket>
              <bucket>&quot;Montenegro&quot;</bucket>
              <bucket>&quot;Maldives&quot;</bucket>
              <bucket>&quot;Malta&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1qmrvgy1davq1f1h6xomc1dami74].[:Measure Names]</column>
            <column>[federated.1qmrvgy1davq1f1h6xomc1dami74].[none:Country (Smartphones):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.1qmrvgy1davq1f1h6xomc1dami74].[Multiple Values]' value='false' />
            <format attr='break-on-special' field='[federated.1qmrvgy1davq1f1h6xomc1dami74].[Multiple Values]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1qmrvgy1davq1f1h6xomc1dami74].[Multiple Values]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1qmrvgy1davq1f1h6xomc1dami74].[sum:Smartphone Users:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1qmrvgy1davq1f1h6xomc1dami74].[none:Country (Smartphones):nk]</rows>
        <cols>[federated.1qmrvgy1davq1f1h6xomc1dami74].[Multiple Values]</cols>
      </table>
      <simple-id uuid='{B216F1C6-264C-4A4F-B1F1-0CB8EE51D5D7}' />
    </worksheet>
    <worksheet name='top 20 - GPD'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#aa0000' fontname='Tableau Medium'>Ranking of top 20 country GDP per capita</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='GDP+ (The Wealth of nations)' name='federated.1qmrvgy1davq1f1h6xomc1dami74' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1qmrvgy1davq1f1h6xomc1dami74'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[GDP - per capita (PPP)]' role='measure' type='quantitative' />
            <_.fcp.ObjectModelTableType.false...column caption='GDP' datatype='integer' name='[__tableau_internal_object_id__].[GDP_94069DFFB9C444CCB112360E79B716FD]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Rank]' role='measure' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='GDP' datatype='table' name='[__tableau_internal_object_id__].[GDP_94069DFFB9C444CCB112360E79B716FD]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[GDP_94069DFFB9C444CCB112360E79B716FD]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:GDP_94069DFFB9C444CCB112360E79B716FD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[GDP - per capita (PPP)]' derivation='Max' name='[max:GDP - per capita (PPP):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Rank]' derivation='None' name='[none:Rank:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1qmrvgy1davq1f1h6xomc1dami74].[max:GDP - per capita (PPP):qk]' included-values='non-null' />
          <filter class='categorical' column='[federated.1qmrvgy1davq1f1h6xomc1dami74].[none:Country:nk]'>
            <groupfilter count='20' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([Country])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <natural-sort column='[federated.1qmrvgy1davq1f1h6xomc1dami74].[none:Country:nk]' direction='ASC' />
          <filter class='quantitative' column='[federated.1qmrvgy1davq1f1h6xomc1dami74].[none:Rank:qk]' included-values='in-range'>
            <min>11</min>
          </filter>
          <slices>
            <column>[federated.1qmrvgy1davq1f1h6xomc1dami74].[none:Country:nk]</column>
            <column>[federated.1qmrvgy1davq1f1h6xomc1dami74].[none:Rank:qk]</column>
            <column>[federated.1qmrvgy1davq1f1h6xomc1dami74].[max:GDP - per capita (PPP):qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1qmrvgy1davq1f1h6xomc1dami74].[Longitude (generated)]' field-type='quantitative' max='23154247.041614369' min='-11911394.386244796' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1qmrvgy1davq1f1h6xomc1dami74].[Latitude (generated)]' field-type='quantitative' max='12252950.904235583' min='-8880360.6734795794' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='satellite' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1qmrvgy1davq1f1h6xomc1dami74].[none:Country:nk]' />
              <size column='[federated.1qmrvgy1davq1f1h6xomc1dami74].[__tableau_internal_object_id__].[cnt:GDP_94069DFFB9C444CCB112360E79B716FD:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.73563534021377563' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1qmrvgy1davq1f1h6xomc1dami74].[Latitude (generated)]</rows>
        <cols>[federated.1qmrvgy1davq1f1h6xomc1dami74].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{EDC927AD-AB45-4E5E-A8CD-CE657C432356}' />
    </worksheet>
    <worksheet name='top GDP'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#aa0000' fontname='Tableau Medium'>Top GDP country per capita  </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='GDP+ (The Wealth of nations)' name='federated.1qmrvgy1davq1f1h6xomc1dami74' />
          </datasources>
          <datasource-dependencies datasource='federated.1qmrvgy1davq1f1h6xomc1dami74'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[GDP - per capita (PPP)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Rank]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[GDP - per capita (PPP)]' derivation='Sum' name='[sum:GDP - per capita (PPP):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Rank]' derivation='Sum' name='[sum:Rank:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.1qmrvgy1davq1f1h6xomc1dami74].[sum:GDP - per capita (PPP):qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
            <encoding attr='color' field='[federated.1qmrvgy1davq1f1h6xomc1dami74].[sum:GDP - per capita (PPP):qk]' palette='orange_blue_diverging_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.1qmrvgy1davq1f1h6xomc1dami74].[sum:GDP - per capita (PPP):qk]' />
              <color column='[federated.1qmrvgy1davq1f1h6xomc1dami74].[sum:GDP - per capita (PPP):qk]' />
              <text column='[federated.1qmrvgy1davq1f1h6xomc1dami74].[none:Country:nk]' />
              <text column='[federated.1qmrvgy1davq1f1h6xomc1dami74].[sum:Rank:qk]' />
              <text column='[federated.1qmrvgy1davq1f1h6xomc1dami74].[sum:GDP - per capita (PPP):qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{645DDE09-8750-4A9D-BA50-459F9103D6DE}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='GDP+ (The Wealth of nations)' name='federated.1qmrvgy1davq1f1h6xomc1dami74' />
      </datasources>
      <datasource-dependencies datasource='federated.1qmrvgy1davq1f1h6xomc1dami74'>
        <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
        <column datatype='real' name='[GDP - per capita (PPP)]' role='measure' type='quantitative' />
        <column datatype='integer' name='[Rank]' role='measure' type='quantitative' />
        <column-instance column='[GDP - per capita (PPP)]' derivation='Max' name='[max:GDP - per capita (PPP):qk]' pivot='key' type='quantitative' />
        <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
        <column-instance column='[Rank]' derivation='None' name='[none:Rank:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='7' param='horz' type-v2='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='5' type-v2='layout-basic' w='52600' x='800' y='1000' />
            <zone fixed-size='458' h='98000' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='45800' x='53400' y='1000'>
              <zone h='6375' id='8' name='top 20 - GPD' param='[federated.1qmrvgy1davq1f1h6xomc1dami74].[max:GDP - per capita (PPP):qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='45800' x='53400' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='28375' id='9' name='top 20 - GPD' param='[federated.1qmrvgy1davq1f1h6xomc1dami74].[none:Country:nk]' type-v2='filter' w='45800' x='53400' y='7375'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='6375' id='10' name='top 20 - GPD' param='[federated.1qmrvgy1davq1f1h6xomc1dami74].[none:Rank:qk]' show-domain='false' show-morefewerbutton='true' show-null-ctrls='false' type-v2='filter' values='relevant' w='45800' x='53400' y='35750'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='28375' id='11' name='top 20 - GPD' pane-specification-id='2' param='[federated.1qmrvgy1davq1f1h6xomc1dami74].[none:Country:nk]' type-v2='color' w='45800' x='53400' y='42125'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='5750' id='12' name='top 20 - GPD' pane-specification-id='2' param='[federated.1qmrvgy1davq1f1h6xomc1dami74].[__tableau_internal_object_id__].[cnt:GDP_94069DFFB9C444CCB112360E79B716FD:qk]' type-v2='size' w='45800' x='53400' y='70500'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='8125' id='14' name='smartphones by country' pane-specification-id='0' param='[federated.1qmrvgy1davq1f1h6xomc1dami74].[sum:Smartphone Users:qk]' type-v2='color' w='45800' x='53400' y='76250'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='6500' id='16' name='life expectancy by country' param='[federated.1qmrvgy1davq1f1h6xomc1dami74].[none:Country (Life Expectancy):nk]' type-v2='highlighter' w='45800' x='53400' y='84375'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='8125' id='18' name='top GDP' pane-specification-id='0' param='[federated.1qmrvgy1davq1f1h6xomc1dami74].[sum:GDP - per capita (PPP):qk]' type-v2='color' w='45800' x='53400' y='90875'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='39125' id='3' name='top 20 - GPD' w='44900' x='3300' y='2125' />
        <zone h='48125' id='13' name='smartphones by country' w='39400' x='59800' y='42250' />
        <zone h='38375' id='15' name='life expectancy by country' w='49000' x='51000' y='3750' />
        <zone h='64875' id='17' name='top GDP' w='56400' x='2800' y='42625' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1700' minheight='1700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='24' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='23' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone h='6375' id='8' name='top 20 - GPD' param='[federated.1qmrvgy1davq1f1h6xomc1dami74].[max:GDP - per capita (PPP):qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='45800' x='53400' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='28375' id='9' mode='checkdropdown' name='top 20 - GPD' param='[federated.1qmrvgy1davq1f1h6xomc1dami74].[none:Country:nk]' type-v2='filter' w='45800' x='53400' y='7375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6375' id='10' name='top 20 - GPD' param='[federated.1qmrvgy1davq1f1h6xomc1dami74].[none:Rank:qk]' show-domain='false' show-morefewerbutton='true' show-null-ctrls='false' type-v2='filter' values='relevant' w='45800' x='53400' y='35750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='39125' id='3' is-fixed='true' name='top 20 - GPD' w='44900' x='3300' y='2125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='28375' id='11' name='top 20 - GPD' pane-specification-id='2' param='[federated.1qmrvgy1davq1f1h6xomc1dami74].[none:Country:nk]' type-v2='color' w='45800' x='53400' y='42125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='5750' id='12' name='top 20 - GPD' pane-specification-id='2' param='[federated.1qmrvgy1davq1f1h6xomc1dami74].[__tableau_internal_object_id__].[cnt:GDP_94069DFFB9C444CCB112360E79B716FD:qk]' type-v2='size' w='45800' x='53400' y='70500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6500' id='16' name='life expectancy by country' param='[federated.1qmrvgy1davq1f1h6xomc1dami74].[none:Country (Life Expectancy):nk]' type-v2='highlighter' w='45800' x='53400' y='84375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='38375' id='15' is-fixed='true' name='life expectancy by country' w='49000' x='51000' y='3750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48125' id='13' is-fixed='true' name='smartphones by country' w='39400' x='59800' y='42250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8125' id='14' name='smartphones by country' pane-specification-id='0' param='[federated.1qmrvgy1davq1f1h6xomc1dami74].[sum:Smartphone Users:qk]' type-v2='color' w='45800' x='53400' y='76250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='64875' id='17' is-fixed='true' name='top GDP' w='56400' x='2800' y='42625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8125' id='18' name='top GDP' pane-specification-id='0' param='[federated.1qmrvgy1davq1f1h6xomc1dami74].[sum:GDP - per capita (PPP):qk]' type-v2='color' w='45800' x='53400' y='90875'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{50349E71-1FCE-4597-A770-A520EF72EC73}' />
    </dashboard>
    <dashboard name='Story 1' type='storyboard'>
      <style />
      <size maxheight='964' maxwidth='1016' minheight='964' minwidth='1016' />
      <zones>
        <zone h='100000' id='2' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98340' id='1' param='vert' removable='false' type-v2='layout-flow' w='98426' x='787' y='830'>
            <zone h='3423' id='3' type-v2='title' w='98426' x='787' y='830' />
            <zone h='10477' id='4' is-fixed='true' paired-zone-id='5' removable='false' type-v2='flipboard-nav' w='98426' x='787' y='4253' />
            <zone h='84440' id='5' paired-zone-id='4' removable='false' type-v2='flipboard' w='98426' x='787' y='14730'>
              <flipboard active-id='1' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point captured-sheet='' id='1' />
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <simple-id uuid='{0AD82AA5-B65E-43E4-8C20-CCF33FF7E4D1}' />
    </dashboard>
    <dashboard name='Story 2' type='storyboard'>
      <style />
      <size maxheight='964' maxwidth='1016' minheight='964' minwidth='1016' />
      <zones>
        <zone h='100000' id='2' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98340' id='1' param='vert' removable='false' type-v2='layout-flow' w='98426' x='787' y='830'>
            <zone h='3423' id='3' type-v2='title' w='98426' x='787' y='830' />
            <zone h='10477' id='4' is-fixed='true' paired-zone-id='5' removable='false' type-v2='flipboard-nav' w='98426' x='787' y='4253' />
            <zone h='84440' id='5' paired-zone-id='4' removable='false' type-v2='flipboard' w='98426' x='787' y='14730'>
              <flipboard active-id='1' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point captured-sheet='' id='1' />
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <simple-id uuid='{BE50F6C3-3FF0-4D1D-A0CA-32CDA31DF528}' />
    </dashboard>
    <dashboard name='Story 3' type='storyboard'>
      <style />
      <size maxheight='964' maxwidth='1016' minheight='964' minwidth='1016' />
      <zones>
        <zone h='100000' id='2' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98340' id='1' param='vert' removable='false' type-v2='layout-flow' w='98426' x='787' y='830'>
            <zone h='3423' id='3' type-v2='title' w='98426' x='787' y='830' />
            <zone h='10477' id='4' is-fixed='true' paired-zone-id='5' removable='false' type-v2='flipboard-nav' w='98426' x='787' y='4253' />
            <zone h='84440' id='5' paired-zone-id='4' removable='false' type-v2='flipboard' w='98426' x='787' y='14730'>
              <flipboard active-id='1' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point captured-sheet='top 20 - GPD' id='1'>
                    <currentDeltas>
                      <worksheet name='top 20 - GPD'>
                        <filter class='quantitative' column='[federated.1qmrvgy1davq1f1h6xomc1dami74].[max:GDP - per capita (PPP):qk]' included-values='in-range-or-null'>
                          <min>752.0</min>
                          <max>24849.0</max>
                        </filter>
                        <filter class='quantitative' column='[federated.1qmrvgy1davq1f1h6xomc1dami74].[none:Rank:qk]' included-values='in-range'>
                          <min>1</min>
                        </filter>
                      </worksheet>
                    </currentDeltas>
                    <capturedDeltas />
                  </story-point>
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <simple-id uuid='{04ED92DA-B658-46D2-8B4F-EB935D3E5886}' />
    </dashboard>
    <dashboard name='Story 4' type='storyboard'>
      <style />
      <size maxheight='964' maxwidth='1016' minheight='964' minwidth='1016' />
      <zones>
        <zone h='100000' id='2' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98340' id='1' param='vert' removable='false' type-v2='layout-flow' w='98426' x='787' y='830'>
            <zone h='3423' id='3' type-v2='title' w='98426' x='787' y='830' />
            <zone h='10477' id='4' is-fixed='true' paired-zone-id='5' removable='false' type-v2='flipboard-nav' w='98426' x='787' y='4253' />
            <zone h='84440' id='5' paired-zone-id='4' removable='false' type-v2='flipboard' w='98426' x='787' y='14730'>
              <flipboard active-id='1' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point captured-sheet='' id='1' />
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <simple-id uuid='{CD801D3E-B9B0-4E05-AF14-6D9DC9D63483}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='top 20 - GPD'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1qmrvgy1davq1f1h6xomc1dami74].[max:GDP - per capita (PPP):qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card param='[federated.1qmrvgy1davq1f1h6xomc1dami74].[none:Country:nk]' type='filter' />
            <card param='[federated.1qmrvgy1davq1f1h6xomc1dami74].[none:Rank:qk]' show-domain='false' show-morefewerbutton='true' show-null-ctrls='false' type='filter' values='relevant' />
            <card pane-specification-id='2' param='[federated.1qmrvgy1davq1f1h6xomc1dami74].[none:Country:nk]' type='color' />
            <card pane-specification-id='2' param='[federated.1qmrvgy1davq1f1h6xomc1dami74].[__tableau_internal_object_id__].[cnt:GDP_94069DFFB9C444CCB112360E79B716FD:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1qmrvgy1davq1f1h6xomc1dami74].[none:Country:nk]</field>
            <field>[federated.1qmrvgy1davq1f1h6xomc1dami74].[none:Rank:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A80A1C0E-A7A5-44F8-A472-A4A5A17AB17D}' />
    </window>
    <window class='worksheet' name='life expectancy by country'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1qmrvgy1davq1f1h6xomc1dami74].[none:Country (Life Expectancy):nk]' type='highlighter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <fields>
                  <field>[federated.1qmrvgy1davq1f1h6xomc1dami74].[none:Country (Life Expectancy):nk]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;Togo&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.1qmrvgy1davq1f1h6xomc1dami74].[:Measure Names]</field>
            <field>[federated.1qmrvgy1davq1f1h6xomc1dami74].[none:Country (Life Expectancy):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EAEFE754-7D7B-4A2A-A57F-2FAD4CE6EA5B}' />
    </window>
    <window class='worksheet' name='top GDP'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1qmrvgy1davq1f1h6xomc1dami74].[sum:GDP - per capita (PPP):qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1qmrvgy1davq1f1h6xomc1dami74].[none:Country:nk]</field>
            <field>[federated.1qmrvgy1davq1f1h6xomc1dami74].[sum:GDP - per capita (PPP):qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{41CBF4AD-B49B-41B9-8B49-487FA65134F6}' />
    </window>
    <window class='worksheet' maximized='true' name='smartphones by country'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1qmrvgy1davq1f1h6xomc1dami74].[sum:Smartphone Users:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1qmrvgy1davq1f1h6xomc1dami74].[none:Country (Smartphones):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7C969BD8-2B95-4E8B-8DDD-F397D06EF18E}' />
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='life expectancy by country' />
        <viewpoint name='smartphones by country' />
        <viewpoint name='top 20 - GPD'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.1qmrvgy1davq1f1h6xomc1dami74].[none:Country:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='top GDP' />
      </viewpoints>
      <active id='13' />
      <simple-id uuid='{D351F608-50EC-49CB-90C0-A5D3D8B87A1C}' />
    </window>
    <window class='dashboard' name='Story 1'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{D5587943-05EC-48F4-B23E-DEB793ED0BFF}' />
    </window>
    <window class='dashboard' name='Story 2'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{9814F03C-52E9-4E03-B054-4BB67BA979A0}' />
    </window>
    <window class='dashboard' name='Story 3'>
      <viewpoints />
      <active id='5' />
      <simple-id uuid='{7AC0C3A6-9E68-468E-8525-E6A8884978DD}' />
    </window>
    <window class='dashboard' name='Story 4'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{C71A526C-0B88-4E32-87EA-53399AE1EDE2}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Story 3' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAEG0lEQVR4nO3c32tXdRzH8fd+yJrViC0MikrGVIh+OGU0m4VDsx924ZDIi6Arkcroov+j
      C+mi7vqF7CJDwqVGpGaSUSiJFf5ASMkK1ppZTSL27XbiRanDr/Z6PO4OnHN4fy6enA8czmlp
      NBqNglCtzR4AmkkARBMA0dpnHnwytrWO/zBet96xsNatXFxfnzpXDyy867/f7fxkvfHmaDUa
      03X/4Mp6qH/RbM8Ls+qCAA4fPVkvvPxKtVWj9u/cUlt2H62RkZHq7+2pD3Z8XEuGHq1F8+bU
      sTNn69Tpn+q2nptqYGCgDh06WIv7l1RLR1dt2Lixxs+crJ37DguAa94FW6CRNavr9dc213tj
      u2toaHkNDj9Rq4aW1tZtY7X+2efqwEfb67fJH+v9HftqePjhOn38m/p16nwdOXKsWqqqWlrr
      y0931Tuj26p3wYLmrAguwYwA/q6/Wm+uTZterF/OnKhqba0/z/1e09PTF100sGx53djRXo8/
      tqLe3vxq9S59pKqq/pgcr/n3LquXnt9QX32+/2qtAS7bjC1Qa/38/Xe1d++eWvXk2qqueXX3
      DQdq/8Fva93aNTX67ls1uPqp6rplTi1om1NVVXN75ldLx9wavOf2qqpqa2urz3Ztr7NT0/X0
      M+ubsR64JC1X8iLsiz0f1lTnnbXiwftmcya4aq4oALjeeQ9ANAEQTQBEa//3U7iWTExM1MTE
      RLPHuEhfX1+zR7gsngBEEwDRBEA0ARBNAEQTANEEQDQBEE0ARBMA0QRANAEQTQBEEwDRBEA0
      ARDNBzHXmc7Ozuru7m72GP8b/gpBNFsgogmAaAIgmgCIJgCiCYBoAiCaAIgmAKIJgGgCIJoA
      iCYAogmAaAIgmgCIJgCiCYBoAiCaAIgmAKIJgGgCIJoAiCYAogmAaAIgmgCIJgCiCYBoAiCa
      AIgmAKIJgGgCIJoAiCYAogmAaAIgmgCIJgCiCYBoAiCaAIgmAKIJgGgCIJoAiCYAogmAaAIg
      mgCIJgCiCYBoAiCaAIgmAKIJgGgCIJoAiCYAogmAaAIgmgCIJgCiCYBoAiCaAIgmAKIJgGgC
      IJoAiCYAogmAaAIgmgCIJgCiCYBoAiCaAIgmAKIJgGgCIJoAiCYAogmAaAIgmgCIJgCiCYBo
      AiCaAIgmAKIJgGgCIJoAiCYAogmAaAIgmgCIJgCiCYBoAiCaAIgmAKIJgGgCIJoAiCYAogmA
      aAIgmgCIJgCiCYBoAiCaAIgmAKIJgGgCIJoAiCYAogmAaAIgmgCIJgCiCYBoAiCaAIgmAKIJ
      gGgCIJoAiCYAogmAaAIgmgCIJgCiCYBoAiCaAIgmAKIJgGgCIJoAiCYAogmAaAIgmgCIJgCi
      CYBoAiCaAIgmAKIJgGgCIJoAiCYAogmAaAIg2j+nj5PTmF9XgQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='life expectancy by country' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='smartphones by country' width='192'>
      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
      xkYOgSQNzf8HLiV+IHFJ0xIAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='top 20 - GPD' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='top GDP' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
